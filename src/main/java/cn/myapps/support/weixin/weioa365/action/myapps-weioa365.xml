<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
        "http://struts.apache.org/dtds/struts-2.0.dtd">
<struts>
	<include file="webwork-default.xml" />
	<package name="weioa365-services" extends="myapps-default,json-default"
		namespace="/weioa365/services">


		<action name="getDepartments"
			class="cn.myapps.support.weixin.weioa365.action.MyappsService"
			method="getDepartments">
			<result type="json">
				<!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
				<!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->
				<param name="root">dataMap</param>
				<!-- 指定是否排除序列化空的属性 -->
				<param name="excludeNullProperties">true</param>
				<!-- 这里指定将序列化dataMap中的那些属性 <param name="includeProperties"> </param> -->
				<!-- 这里指定将要从dataMap中排除那些属性，这些排除的属性将不被序列化，一般不与上边的参数配置同时出现 -->
				<!-- <param name="excludeProperties"> data.sortId,data.applicationid,data.version,data.lazyLoad 
					</param> -->
			</result>
			<interceptor-ref name="params" />
			<interceptor-ref name="chain" />
		</action>
		<action name="updateDepartment"
			class="cn.myapps.support.weixin.weioa365.action.MyappsService"
			method="updateDepartment">
			<result type="json">
				<!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
				<!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->
				<param name="root">dataMap</param>
				<!-- 指定是否排除序列化空的属性 -->
				<param name="excludeNullProperties">true</param>
				<!-- 这里指定将序列化dataMap中的那些属性 <param name="includeProperties"> </param> -->
				<!-- 这里指定将要从dataMap中排除那些属性，这些排除的属性将不被序列化，一般不与上边的参数配置同时出现 -->
				<!-- <param name="excludeProperties"> data.sortId,data.applicationid,data.version,data.lazyLoad 
					</param> -->
			</result>
			<interceptor-ref name="params" />
			<interceptor-ref name="chain" />
		</action>
		<action name="updateDepartments"
			class="cn.myapps.support.weixin.weioa365.action.MyappsService"
			method="updateDepartments">
			<result type="json">
				<!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
				<!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->
				<param name="root">dataMap</param>
				<!-- 指定是否排除序列化空的属性 -->
				<param name="excludeNullProperties">true</param>
				<!-- 这里指定将序列化dataMap中的那些属性 <param name="includeProperties"> </param> -->
				<!-- 这里指定将要从dataMap中排除那些属性，这些排除的属性将不被序列化，一般不与上边的参数配置同时出现 -->
				<!-- <param name="excludeProperties"> data.sortId,data.applicationid,data.version,data.lazyLoad 
					</param> -->
			</result>
			<interceptor-ref name="params" />
			<interceptor-ref name="chain" />
		</action>
			<action name="getDepartmentsByParams"
			class="cn.myapps.support.weixin.weioa365.action.MyappsService"
			method="getDepartmentsByParams">
			<result type="json">
				<!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
				<!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->
				<param name="root">dataMap</param>
				<!-- 指定是否排除序列化空的属性 -->
				<param name="excludeNullProperties">true</param>
				<!-- 这里指定将序列化dataMap中的那些属性 <param name="includeProperties"> </param> -->
				<!-- 这里指定将要从dataMap中排除那些属性，这些排除的属性将不被序列化，一般不与上边的参数配置同时出现 -->
				<!-- <param name="excludeProperties"> data.sortId,data.applicationid,data.version,data.lazyLoad 
					</param> -->
			</result>
			<interceptor-ref name="params" />
			<interceptor-ref name="chain" />
		</action>
		<action name="getDepartmentsByLevel"
			class="cn.myapps.support.weixin.weioa365.action.MyappsService"
			method="getDepartmentsByLevel">
			<result type="json">
				<!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
				<!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->
				<param name="root">dataMap</param>
				<!-- 指定是否排除序列化空的属性 -->
				<param name="excludeNullProperties">true</param>
				<!-- 这里指定将序列化dataMap中的那些属性 <param name="includeProperties"> </param> -->
				<!-- 这里指定将要从dataMap中排除那些属性，这些排除的属性将不被序列化，一般不与上边的参数配置同时出现 -->
				<!-- <param name="excludeProperties"> data.sortId,data.applicationid,data.version,data.lazyLoad 
					</param> -->
			</result>
			<interceptor-ref name="params" />
			<interceptor-ref name="chain" />
		</action>
		<action name="getDepartmentsByLevelAndName"
			class="cn.myapps.support.weixin.weioa365.action.MyappsService"
			method="getDepartmentsByLevelAndName">
			<result type="json">
				<!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
				<!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->
				<param name="root">dataMap</param>
				<!-- 指定是否排除序列化空的属性 -->
				<param name="excludeNullProperties">true</param>
				<!-- 这里指定将序列化dataMap中的那些属性 <param name="includeProperties"> </param> -->
				<!-- 这里指定将要从dataMap中排除那些属性，这些排除的属性将不被序列化，一般不与上边的参数配置同时出现 -->
				<!-- <param name="excludeProperties"> data.sortId,data.applicationid,data.version,data.lazyLoad 
					</param> -->
			</result>
			<interceptor-ref name="params" />
			<interceptor-ref name="chain" />
		</action>
		<action name="createDepartment"
			class="cn.myapps.support.weixin.weioa365.action.MyappsService"
			method="createDepartment">
			<result type="json">
				<!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
				<!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->
				<param name="root">dataMap</param>
				<!-- 指定是否排除序列化空的属性 -->
				<param name="excludeNullProperties">true</param>
				<!-- 这里指定将序列化dataMap中的那些属性 <param name="includeProperties"> </param> -->
				<!-- 这里指定将要从dataMap中排除那些属性，这些排除的属性将不被序列化，一般不与上边的参数配置同时出现 -->
				<!-- <param name="excludeProperties"> data.sortId,data.applicationid,data.version,data.lazyLoad 
					</param> -->
			</result>
			<interceptor-ref name="params" />
			<interceptor-ref name="chain" />
		</action>
			<action name="getUsersByParams"
			class="cn.myapps.support.weixin.weioa365.action.MyappsService"
			method="getUsersByParams">
			<result type="json">
				<!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
				<!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->
				<param name="root">dataMap</param>
				<!-- 指定是否排除序列化空的属性 -->
				<param name="excludeNullProperties">true</param>
				<!-- 这里指定将序列化dataMap中的那些属性 <param name="includeProperties"> </param> -->
				<!-- 这里指定将要从dataMap中排除那些属性，这些排除的属性将不被序列化，一般不与上边的参数配置同时出现 -->
				<!-- <param name="excludeProperties"> data.sortId,data.applicationid,data.version,data.lazyLoad 
					</param> -->
			</result>
			<interceptor-ref name="params" />
			<interceptor-ref name="chain" />
		</action>
		<action name="updateUser"
			class="cn.myapps.support.weixin.weioa365.action.MyappsService"
			method="updateUser">
			<result type="json">
				<!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
				<!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->
				<param name="root">dataMap</param>
				<!-- 指定是否排除序列化空的属性 -->
				<param name="excludeNullProperties">true</param>
				<!-- 这里指定将序列化dataMap中的那些属性 <param name="includeProperties"> </param> -->
				<!-- 这里指定将要从dataMap中排除那些属性，这些排除的属性将不被序列化，一般不与上边的参数配置同时出现 -->
				<!-- <param name="excludeProperties"> data.sortId,data.applicationid,data.version,data.lazyLoad 
					</param> -->
			</result>
			<interceptor-ref name="params" />
			<interceptor-ref name="chain" />
		</action>
		<action name="createUser"
			class="cn.myapps.support.weixin.weioa365.action.MyappsService"
			method="createUser">
			<result type="json">
				<!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
				<!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->
				<param name="root">dataMap</param>
				<!-- 指定是否排除序列化空的属性 -->
				<param name="excludeNullProperties">true</param>
				<!-- 这里指定将序列化dataMap中的那些属性 <param name="includeProperties"> </param> -->
				<!-- 这里指定将要从dataMap中排除那些属性，这些排除的属性将不被序列化，一般不与上边的参数配置同时出现 -->
				<!-- <param name="excludeProperties"> data.sortId,data.applicationid,data.version,data.lazyLoad 
					</param> -->
			</result>
			<interceptor-ref name="params" />
			<interceptor-ref name="chain" />
		</action>
		<action name="getDefaultAppMenus"
			class="cn.myapps.support.weixin.weioa365.action.MyappsService"
			method="getDefaultAppMenus">
			<result type="json">
				<!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
				<!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->
				<param name="root">dataMap</param>
				<!-- 指定是否排除序列化空的属性 -->
				<param name="excludeNullProperties">true</param>
				<!-- 这里指定将序列化dataMap中的那些属性 <param name="includeProperties"> </param> -->
				<!-- 这里指定将要从dataMap中排除那些属性，这些排除的属性将不被序列化，一般不与上边的参数配置同时出现 -->
				<!-- <param name="excludeProperties"> data.sortId,data.applicationid,data.version,data.lazyLoad 
					</param> -->
			</result>
			<interceptor-ref name="params" />
			<interceptor-ref name="chain" />
		</action>
		<action name="updateWeixinProxyType"
			class="cn.myapps.support.weixin.weioa365.action.MyappsService"
			method="updateWeixinProxyType">
			<result type="json">
				<!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
				<!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->
				<param name="root">dataMap</param>
				<!-- 指定是否排除序列化空的属性 -->
				<param name="excludeNullProperties">true</param>
				<!-- 这里指定将序列化dataMap中的那些属性 <param name="includeProperties"> </param> -->
				<!-- 这里指定将要从dataMap中排除那些属性，这些排除的属性将不被序列化，一般不与上边的参数配置同时出现 -->
				<!-- <param name="excludeProperties"> data.sortId,data.applicationid,data.version,data.lazyLoad 
					</param> -->
			</result>
			<interceptor-ref name="params" />
			<interceptor-ref name="chain" />
		</action>
			<action name="upload"
			class="cn.myapps.support.weixin.weioa365.action.MyappsService"
			method="upload">
			<result type="json">
				<!-- 这里指定将被Struts2序列化的属性，该属性在action中必须有对应的getter方法 -->
				<!-- 默认将会序列所有有返回值的getter方法的值，而无论该方法是否有对应属性 -->
				<param name="root">dataMap</param>
				<!-- 指定是否排除序列化空的属性 -->
				<param name="excludeNullProperties">true</param>
				<!-- 这里指定将序列化dataMap中的那些属性 <param name="includeProperties"> </param> -->
				<!-- 这里指定将要从dataMap中排除那些属性，这些排除的属性将不被序列化，一般不与上边的参数配置同时出现 -->
				<!-- <param name="excludeProperties"> data.sortId,data.applicationid,data.version,data.lazyLoad 
					</param> -->
			</result>
			<interceptor-ref name="params" />
			<interceptor-ref name="chain" />
		</action>
	</package>
</struts>